#!/bin/sh -x
#
# An example script to mirror Debian/sid into debmarshal snapshots.
# debmiror is used to pull and verify distributions, and using a debmarshal
# patch also takes each snapshot.  The latest symlink is updated
# after each successful pull.
# EDOS is then used to count the failures in each distribution.
# if the count is zero for each architecture, the "best" symlink is
# updated to this snapshot.
# If the linecount of the EDOS failures is the same or less for all
# architectures, the "better" symlink is updated to the latest snapshot.
# See http://code.google.com/p/debmarshal/wiki/DebmarshalRepositoryMirrorSetup
# for further details.
#
# Copyright 2009,2010 Google Inc.
# Author: Drake Diedrich <dld@google.com>
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, version 2.
#
# This program is distributed in the hope that it will be useful, but
# WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
# General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA
# 02110-1301, USA.

set -e

#
# use debmirror and gnupg to pull and verify all of the distributions
# you wish to track.
#

/usr/bin/debmirror --debug -v --progress \
	--method=http \
	-h ftp.us.debian.org --root=debian \
	--dist=sid \
	--section=main,contrib,non-free \
	--arch=i386,amd64 \
	--nocleanup --source \
	--diff=mirror --debmarshal --getcontents \
	/var/lib/debmarshal/debian

cd /var/lib/debmarshal/debian/dists/sid

latest=`readlink latest`

#
# Update the "best" symlink if edos-debcheck reports no failures
# on each architecture.
#
best=1
for arch in i386 amd64
do
	if ! edos-debcheck -failures \
		<latest/main/binary-${arch}/Packages \
		>latest/main/binary-${arch}/Packages.edos
	then
		best=0
	fi
done

if [ "$best" -eq "1" ]
then
	echo best=$best
	mv best best.0
	ln -sf $latest best
fi


#
# Update the "better" symlink if each architecture's .edos file
# is as short as or shorter than it's successor
#
better=1
for arch in i386 amd64
do
	new=`wc -l <latest/main/binary-${arch}/Packages.edos`
	old=`wc -l <better/main/binary-${arch}/Packages.edos`
	if [ "$new" -gt "$old" ] ; then
		better=0
	fi
done

if [ "$better" -eq "1" ]
then
	mv better better.0
	ln -sf $latest better
fi
