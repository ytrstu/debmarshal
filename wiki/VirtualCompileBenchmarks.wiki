#summary Compile-benchmarks on several virtualization engines

= Introduction =

Often the slowest part of a test run is building the test source under a protected virtualization layer.  This benchmark is to configure and compile about 14M of C source code on Debian/lenny i386.  This typically takes on the order of a minute and fits in a relatively small VM, and even on very underpowered host systems under heavy virtualization is likely to finish in an hour or so.  Single and multithreaded builds (make -j2) are recorded, and multiple host root filesystem and other options are compared as the particular VM allows.

= Details =

{{{
aptitude install build-essential libncurses-dev wget
wget -O empire-4.3.10.tar.gz http://sourceforge.net/project/showfiles.php?group_id=24031&package_id=40131&release_id=537696
tar zxvf empire-4.3.10.tar.gz
cd empire-4.3.10
./configure
time make
make clean
time make -j2
make clean
time make -j4
}}}

= Results =

|| Virtualization       || Build || Host time (s) || || || || ||
||                      ||       || T60p ^1^ || Atom ^2^ || Quad ^3^ ||
---
|| chroot ^a^          ||   -j1 ||      64s ^A^ || || ||
||                      ||   -j2 ||      37s ||
|| chroot loopback ^b^ ||   -j1 ||    54s ^A^ ||  ||
||                      ||   -j2 ||  36s ||  ||
||                      ||   -j4 ||  ||  ||
|| UML SKAS0            ||   -j1 ||  121s ||
||                      ||   -j2 ||  118s ||
|| UML SKAS0 hostfs     ||   -j1 ||  142s ||
|| UML SKAS0 hostfs     ||   -j2 ||  141s ||
|| qemu ^c^            ||   -j1 || 1260s ||
||                      ||   -j2 || ||
|| qemu -smp 2          ||   -j1 || ||
||                      ||   -j2 ||
|| qemu -smp 4          ||   -j4 || || || ||
|| kvm                  ||   -j1 || ||
||                      ||   -j2 || ||
|| openvz               ||   -j1 || ||
||                      ||   -j2 || ||
|| xen                  ||   -j1 || ||
||                      ||   -j2 || ||

^1^ - Lenovo Thinkpad T60p, 2G, 2.17GHz Core Duo, Debian/sid 2009-07.  host FS is on a LUKS encrypted partition

^2^ - Intel G945 1.6GHz

^3^ - HP T4300 Core2 Quad 3.4 GHz, x86_64

^a^ - `mkdir lenny ; debootstrap _args_ lenny ; chroot lenny /bin/bash`

^b^ - `dd if=/dev/zero bs=1M seek=1000 count=0 of=lenny.ext3 ; mkfs -t ext3 -F lenny.ext3 ; mkdir lenny ; mount -o loop lenny.ext3 lenny`

^A^ - very unexpected that host filesystem is typically slower than loopback