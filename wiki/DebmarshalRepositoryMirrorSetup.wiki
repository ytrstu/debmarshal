#summary A simple Debmarshal managed mirror configuration
#labels debmarshal,debian,Ubuntu,Packages,deb

= Introduction =

This is a simple setup to mirror and upstream Debian or Ubuntu repository, keeping snapshots and allowing aliases to be kept.

This is a prerequisite to having a repository of your own directly supervised packages, which will have dependencies on the mirrored archive.


= Details =

== debmirror ==

=== Allocate archive space ===

Make sure /var/lib/debmarshal has sufficient space.  Allocate at least 40G per distribution and architecture, and probably its own filesystem so it can't fill /var.
If one of your mirrors is rapidly changing, you'll need lots of diskspace.

=== Create debmarshal user ===

A separate user will download and verify packages, and later maintain the upload queue and
distribution tracks.

{{{
adduser --disabled-login debmarshal
}}}

=== Install debmirror and gnupg ===

{{{
aptitude install debmirror gnupg
}}}

=== Add repository keys ===

{{{
aptitude install debian-archive-keyring
su - debmarshal
gpg --import /usr/share/keyrings/debian-archive-keyring.gpg
gpg --keyserver hkp://subkeys.pgp.net --recv-key 55BE302B F42584E6
gpg --list-keys
cd .gnupg
cp pubring.gpg trustedkeys.gpg
}}}

Verify and modify trust using =gpg= with your web of trust as best you can.

=== Archive pull ===

Make sure archive pulls are working first, before setting up the debmarshal portion of the archive.

/usr/local/bin/mirror-debian
{{{
/usr/bin/debmirror --debug -v --progress \
        --method=http \
        -h ftp.us.debian.org --root=/debian \
        --dist=lenny \
        --section=main,contrib,non-free,main/debian-installer \
        --arch=i386,amd64 \
        --nocleanup --source \
        /var/lib/debmarshal/debian
}}}

/etc/cron.d/debian-mirror
{{{
MAILTO="debmarshal@localhost"
PATH=/usr/local/bin:/usr/local/sbin:/usr/bin:/usr/sbin:/bin:/sbin
10 15     * * *   root  su - debmarshal -c /usr/local/bin/mirror-debian
}}}

= Debmarshal configuration =

== generate a gpg signing key ==

Its easiest if the debmarshal signing key has no passphrase, but you can also put it unencrypted on ramdisk, set up a signing agent, or type in the passphrase each time debmarshal requires.

{{{
aptitude install gnupg
su - debmarshal
gpg --gen-key
}}}

== pool injection ==

The new packages in debian/pool need to be indexed first and added to the Debmarshal database.  The configuration of the releases to track is

/var/lib/debmarshal/debian/config/repository
{{{
Mode: tracking
Architectures: i386, amd64

[[lenny]
Origin: Debian
Description: Debian/lenny
}}}

Multiple [] stanzas may be used to track multiple releases in the same repository.

The cwd is used to determine where the configuration, database, pool, and dist directories are for the pool indexer.  pool_indexer assumes all package's signatures are already verified, so it is important that debmirror be configured to verify release signatures.

{{{
su - debmarshal
cd /var/lib/debmarshal/debian
mkdir dbs
/usr/lib/debmarshal/index_pool.py
}}}

Append the cd and index_pool.py invocations to your mirror script to automatically index on each download.